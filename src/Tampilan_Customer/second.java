/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Tampilan_Customer;

import java.sql.Connection;
import java.sql.DriverManager;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import static pa.koneksi.getConnection;
import java.util.ArrayList;
import java.util.List;
import pa.koneksi;

/**
 *
 * @author Amira Alissiya
 */
public class second extends javax.swing.JFrame {
    
        private String orderType;
    
        Connection conn;
        private DefaultTableModel modelFood;
        private DefaultTableModel modelDrink;
        private DefaultTableModel modelSnack;
        private String activeMenu = "";
        private List<Pesanan> cart = new ArrayList<>();
        private Integer idPegawai = null;
        private kasir Kasir;

     
    /**
     * Creates new form second
     */
    public second(String orderType) {
        this.orderType = orderType;
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        loadIdPegawaiToComboBox();
        
        jLabelOrderType.setText("Jenis Pesanan: " + orderType);
        
        conn = koneksi.getConnection();
        cart = new ArrayList<>(); 
        
        modelFood = new DefaultTableModel(new String[]{"ID","Nama", "Harga"},0);
        modelDrink = new DefaultTableModel(new String[]{"ID","Nama", "Harga"},0);
        modelSnack = new DefaultTableModel(new String[]{"ID","Nama", "Harga"},0);
        
        loadDataFood();
        loadDataDrink();
        loadDataSnack();
    }

    public Connection getConnection() {
        try {
            if (conn == null || conn.isClosed()) {
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db-pa", "root", "");
            }
        } catch (SQLException e) {
            System.out.println("Error membuka koneksi ke database: " + e.getMessage());
        }
        return conn;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabelOrderType = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLFood = new javax.swing.JLabel();
        jLDrink = new javax.swing.JLabel();
        jLSnack = new javax.swing.JLabel();
        jLConfirm = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jBCart = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jBKasir = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(248, 182, 116));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/ff.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Perpetua Titling MT", 1, 24)); // NOI18N
        jLabel2.setText("FAST FOOD VECTOR");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/chef.png"))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 51));
        jLabel6.setText(" est. 1950");

        jLabelOrderType.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelOrderType.setText("jLabel6");

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/head.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(65, 65, 65)
                .addComponent(jLabelOrderType, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jLabel3)
                .addGap(78, 78, 78))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabelOrderType)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel15))))
                .addContainerGap())
        );

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBackground(new java.awt.Color(254, 222, 191));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(new java.awt.Color(255, 204, 153));

        jLabel4.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel4.setText("MENU :");

        jLFood.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLFood.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/food.png"))); // NOI18N
        jLFood.setText("FOOD");
        jLFood.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLFoodMouseClicked(evt);
            }
        });

        jLDrink.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLDrink.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/ddd.png"))); // NOI18N
        jLDrink.setText("DRINK");
        jLDrink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLDrinkMouseClicked(evt);
            }
        });

        jLSnack.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLSnack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/fff.png"))); // NOI18N
        jLSnack.setText("SNACK");
        jLSnack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLSnackMouseClicked(evt);
            }
        });

        jLConfirm.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLConfirm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/_on.png"))); // NOI18N
        jLConfirm.setText("CONFIRM");
        jLConfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLConfirmMouseClicked(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/menu.png"))); // NOI18N

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/kk.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLFood)
                            .addComponent(jLSnack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLDrink)
                                .addComponent(jLabel4))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel10))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLConfirm)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLFood)
                .addGap(18, 18, 18)
                .addComponent(jLDrink)
                .addGap(18, 18, 18)
                .addComponent(jLSnack)
                .addGap(40, 40, 40)
                .addComponent(jLConfirm)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel4, java.awt.BorderLayout.LINE_START);

        jPanel5.setBackground(new java.awt.Color(254, 222, 191));
        jPanel5.setLayout(new java.awt.GridLayout(2, 0));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nama", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel5.add(jScrollPane1);

        jPanel6.setBackground(new java.awt.Color(254, 222, 191));

        jBCart.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/cc.png"))); // NOI18N
        jBCart.setText("Add To Cart");
        jBCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCartActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        jLabel7.setText("Kasir :");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nama Item", "Jumlah", "Harga", "Total Harga"
            }
        ));
        jScrollPane4.setViewportView(jTable3);

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/ed.png"))); // NOI18N
        jButton3.setText("Edit Pesanan");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/del.png"))); // NOI18N
        jButton4.setText("Hapus Pesanan");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/a.png"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(29, 29, 29)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jBCart)
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(221, 221, 221)
                        .addComponent(jButton4)
                        .addGap(356, 356, 356))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jBCart)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))))
                .addGap(24, 24, 24))
        );

        jPanel5.add(jPanel6);

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Order Frame", jPanel1);

        jPanel8.setLayout(new java.awt.BorderLayout());

        jPanel9.setBackground(new java.awt.Color(248, 182, 116));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/ff.png"))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Perpetua Titling MT", 1, 24)); // NOI18N
        jLabel9.setText("FAST FOOD VECTOR");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/chef.png"))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 51));
        jLabel13.setText(" est. 1950");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/top.png"))); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel13)))
                .addGap(189, 189, 189)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 300, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(58, 58, 58))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel14))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13))
                    .addComponent(jLabel8)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel12)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel8.add(jPanel9, java.awt.BorderLayout.PAGE_START);

        jPanel10.setBackground(new java.awt.Color(254, 222, 191));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jBKasir.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBKasir.setText("Silahkan ke Kasir");
        jBKasir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBKasirActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel16.setText("MENU YANG DIPESAN :");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(393, 393, 393)
                        .addComponent(jBKasir))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1091, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(245, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jBKasir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jPanel8.add(jPanel10, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Confirm Frame", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLFoodMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLFoodMouseClicked
        // TODO add your handling code here:
        activeMenu = "Food";
        loadDataFood();
    }//GEN-LAST:event_jLFoodMouseClicked

    private void jLDrinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLDrinkMouseClicked
        // TODO add your handling code here:
        activeMenu = "Drink";
        loadDataDrink();
    }//GEN-LAST:event_jLDrinkMouseClicked

    private void jLSnackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLSnackMouseClicked
        // TODO add your handling code here:
        activeMenu = "Snack";
        loadDataSnack();
    }//GEN-LAST:event_jLSnackMouseClicked

    private void jLConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLConfirmMouseClicked
        // TODO add your handling code here:
        String customerName = JOptionPane.showInputDialog(this, "Masukkan Nama Customer:");


        if (customerName == null || customerName.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama customer tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (cart.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Keranjang kosong, tambahkan item terlebih dahulu", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        saveToDatabase(customerName, orderType);

    }//GEN-LAST:event_jLConfirmMouseClicked

    private void jBCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCartActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih item terlebih dahulu");
            return;
        }

        // Mengambil data dari baris
        int id = (int) jTable1.getValueAt(selectedRow, 0);
        String nama = (String) jTable1.getValueAt(selectedRow, 1);
        int harga = (int) jTable1.getValueAt(selectedRow, 2); 

        String inputJumlah = JOptionPane.showInputDialog(this, "Masukkan jumlah untuk item: " + nama);

        if (inputJumlah != null && !inputJumlah.isEmpty()) {
            try {
                int jumlah = Integer.parseInt(inputJumlah);

                // Verifikasi jumlah harus lebih besar dari 0
                if (jumlah <= 0) {
                    JOptionPane.showMessageDialog(this, "Jumlah harus lebih besar dari 0.");
                    return;
                }

                String jenisMenu = activeMenu; 

                // objek Pesanan ke keranjang
                Pesanan pesanan = new Pesanan(id, nama, harga, jenisMenu, jumlah);
                cart.add(pesanan);

                JOptionPane.showMessageDialog(this, "Item berhasil ditambahkan ke keranjang");

                // Perbarui tabel keranjang
                updateCartTable();

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Jumlah harus berupa angka yang valid.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Jumlah tidak valid. Silakan coba lagi.");
        }
    }//GEN-LAST:event_jBCartActionPerformed

    private void jBKasirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBKasirActionPerformed
        // TODO add your handling code here:
        login Login = new login();
        Login.setVisible(true);
    }//GEN-LAST:event_jBKasirActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable3.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih item terlebih dahulu di tabel keranjang.");
            return;
        }

        //  item dari cart 
        Pesanan selectedPesanan = cart.get(selectedRow);

        String inputJumlah = JOptionPane.showInputDialog(this, "Masukkan jumlah untuk item: " + selectedPesanan.getNama(), selectedPesanan.getJumlah());

        if (inputJumlah != null && !inputJumlah.isEmpty()) {
            try {
                int newJumlah = Integer.parseInt(inputJumlah);

                // Verifikasi jumlah harus lebih besar dari 0
                if (newJumlah <= 0) {
                    JOptionPane.showMessageDialog(this, "Jumlah harus lebih besar dari 0.");
                    return;
                }

                // Perbarui jumlah di objek Pesanan yang sesuai di cart
                selectedPesanan.setJumlah(newJumlah);

                JOptionPane.showMessageDialog(this, "Jumlah item berhasil diperbarui.");

                // Perbarui tampilan tabel
                updateCartTable();

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Jumlah harus berupa angka yang valid.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Jumlah tidak valid. Silakan coba lagi.");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable3.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih item terlebih dahulu di tabel keranjang.");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus item ini?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            // Hapus item dari cart berdasarkan baris yang dipilih
            cart.remove(selectedRow);

            updateCartTable();

            JOptionPane.showMessageDialog(this, "Item berhasil dihapus dari keranjang.");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void loadDataFood() {
        modelFood.setRowCount(0);

            try {
                String sql = "SELECT * FROM food";
                PreparedStatement ps = conn.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                   // Menambahkan baris ke dalam model tabel
                   modelFood.addRow(new Object[]{
                   rs.getInt("id_food"),
                   rs.getString("nama_food"),
                   rs.getInt("harga")
                 });
                }
                jTable1.setModel(modelFood);

            } catch (SQLException e) {
               System.out.println("Error Save Data" + e.getMessage());
             }
    }
    
    private void loadDataDrink() {
        modelDrink.setRowCount(0);

        try {
            String sql = "SELECT * FROM drink";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
               // Menambahkan baris ke dalam model tabel
               modelDrink.addRow(new Object[]{
               rs.getInt("id_drink"),
               rs.getString("nama_drink"),
               rs.getInt("harga")
             });
            }
            jTable1.setModel(modelDrink);

        } catch (SQLException e) {
           System.out.println("Error Save Data" + e.getMessage());
         }
    }
    
    private void loadDataSnack() {
        modelSnack.setRowCount(0);

        try {
            String sql = "SELECT * FROM snack";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
               modelSnack.addRow(new Object[]{
               rs.getInt("id_snack"),
               rs.getString("nama_snack"),
               rs.getInt("harga")
             });
            }
            jTable1.setModel(modelSnack);

        } catch (SQLException e) {
           System.out.println("Error Save Data" + e.getMessage());
         }
    }
    
    
    private void loadIdPegawaiToComboBox() {
        getConnection();
        jComboBox1.removeAllItems();
        jComboBox1.addItem("Pilih Kasir");    

        try {
            String sql = "SELECT id_pegawai FROM kasir"; // Query untuk mengambil id_pegawai dari tabel kasir
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                int idPegawai = rs.getInt("id_pegawai");
                jComboBox1.addItem(String.valueOf(idPegawai)); // Tambahkan setiap id_pegawai ke combo box
            }

        } catch (SQLException e) {
            System.out.println("Error saat memuat ID Pegawai ke ComboBox: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Error saat memuat ID Pegawai ke ComboBox: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void saveToDatabase(String customerName, String orderType) {
        StringBuilder orderDetails = new StringBuilder(); // Menampung detail pesanan
        int totalPesanan = 0;

        // Ambil ID Pegawai dari JComboBox
        String idPegawaiText = (String) jComboBox1.getSelectedItem();

        // Cek apakah ID Pegawai telah dipilih
        if (idPegawaiText == null || idPegawaiText.equals("Pilih ID Pegawai")) {
            JOptionPane.showMessageDialog(this, "Silakan pilih ID Pegawai.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int idPegawai;
        try {
            idPegawai = Integer.parseInt(idPegawaiText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Silakan pilih Kasir terlebih dahulu.", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Lanjutkan dengan kode yang sudah Anda miliki untuk menyimpan transaksi ke database
        try {
            // Masukkan transaksi utama ke dalam tabel transaksi untuk mendapatkan ID transaksi
            String sqlTransaction = "INSERT INTO transaksi (id_pegawai, nama_customer, tanggal, total) VALUES (?, ?, NOW(), ?)";
            try (PreparedStatement psTransaction = conn.prepareStatement(sqlTransaction, Statement.RETURN_GENERATED_KEYS)) {
                psTransaction.setInt(1, idPegawai);
                psTransaction.setString(2, customerName);
                psTransaction.setInt(3, totalPesanan);

                int affectedRows = psTransaction.executeUpdate();

                if (affectedRows > 0) {
                    // Ambil ID transaksi yang baru dibuat
                    int transactionId = 0;
                    try (ResultSet generatedKeys = psTransaction.getGeneratedKeys()) {
                        if (generatedKeys.next()) {
                            transactionId = generatedKeys.getInt(1); // id transaksi baru
                        }
                    }

                    // detail setiap item yang dipilih dalam 1 transaksi 
                    int id_food = 0;
                    int id_drink = 0;
                    int id_snack = 0;

                    for (Pesanan pesanan : cart) {
                        pesanan.id_DB(conn);

                        Integer food = pesanan.getId_food();
                        Integer drink = pesanan.getId_drink();
                        Integer snack = pesanan.getId_snack();

                        if (food != null) id_food = food;
                        if (drink != null) id_drink = drink;
                        if (snack != null) id_snack = snack;

                        totalPesanan += pesanan.getTotalHarga(); // Menggunakan harga total berdasarkan jumlah

                        // Tambahkan detail item ke orderDetails
                        orderDetails.append("Item: ")
                                    .append(pesanan.getNama())
                                    .append(" | Jumlah: ")
                                    .append(pesanan.getJumlah())
                                    .append(" | Harga per item: ")
                                    .append(pesanan.getHarga())  // Harga per item
                                    .append("\n");

                        String sqlUpdateTransaction = "UPDATE transaksi SET id_food = ?, id_drink = ?, id_snack = ?, total = ? WHERE id_transaksi = ?";
                        try (PreparedStatement psUpdateTransaction = conn.prepareStatement(sqlUpdateTransaction)) {
                            psUpdateTransaction.setInt(1, id_food);
                            psUpdateTransaction.setInt(2, id_drink);
                            psUpdateTransaction.setInt(3, id_snack);
                            psUpdateTransaction.setInt(4, totalPesanan);
                            psUpdateTransaction.setInt(5, transactionId);

                            psUpdateTransaction.executeUpdate();
                        }
                    }

                    JOptionPane.showMessageDialog(this, "Terima Kasih Telah Melakukan Pembelian!");

                    cart.clear();

                    String orderSummary = "ID Transaksi: " + transactionId + "\n" +
                                          "ID Pegawai: " + idPegawai + "\n" +
                                          "Nama Customer: " + customerName + "\n" +
                                          "Order Type: " + orderType + "\n" +
                                          "Detail Pesanan:\n" + orderDetails.toString() +
                                          "Total Pesanan: " + totalPesanan + "\n";

                    jTextArea1.setText(orderSummary);

                    if (Kasir != null) {
                        Kasir.setTotalPesanan(totalPesanan);
                    }
                }
            }
        } catch (SQLException e) {
            System.out.println("Error saat menyimpan ke database: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Error saat menyimpan ke database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void updateCartTable() {
    String[] columnNames = {"Nama Item", "Harga", "Jumlah", "Total Harga"};
    
    // Buat data untuk tabel dari `cart`
    Object[][] data = new Object[cart.size()][4];
    for (int i = 0; i < cart.size(); i++) {
        Pesanan pesanan = cart.get(i);
        data[i][0] = pesanan.getNama();      
        data[i][1] = pesanan.getHarga();          
        data[i][2] = pesanan.getJumlah();         
        data[i][3] = pesanan.getTotalHarga();     
    }

    DefaultTableModel model = new DefaultTableModel(data, columnNames);
    jTable3.setModel(model); 
}

    
    private void deleteSelectedItem() {
    int selectedRow = jTable3.getSelectedRow();
    if (selectedRow != -1) { 
        cart.remove(selectedRow);
        updateCartTable(); 
    } else {
        JOptionPane.showMessageDialog(this, "Pilih item yang ingin dihapus.");
    }
}
    



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(second.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(second.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(second.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(second.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new second(getOrderType()).setVisible(true);
            }

            private String getOrderType() {
                throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCart;
    private javax.swing.JButton jBKasir;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLConfirm;
    private javax.swing.JLabel jLDrink;
    private javax.swing.JLabel jLFood;
    private javax.swing.JLabel jLSnack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelOrderType;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
