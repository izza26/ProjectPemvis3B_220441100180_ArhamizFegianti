/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Tampilan_Customer;

import Tampilan_Customer.Pesanan;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
//import pa.Item;
import pa.koneksi;

/**
 *
 * @author Amira Alissiya
 */
public class kasir extends javax.swing.JFrame {

    Connection conn;
    private DefaultTableModel modelRiwayat;
    private DefaultTableModel modelKasir;
    private List<Pesanan> cart = new ArrayList<>();
    private String activeMenu = "";
    private DefaultTableModel modelFood;
    private DefaultTableModel modelDrink;
    private DefaultTableModel modelSnack;

    
    /**
     * Creates new form kasir
     */
    public kasir() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        
        modelFood = new DefaultTableModel(new String[]{"ID","Nama", "Harga"},0);
        modelDrink = new DefaultTableModel(new String[]{"ID","Nama", "Harga"},0);
        modelSnack = new DefaultTableModel(new String[]{"ID","Nama", "Harga"},0);
        
        conn = koneksi.getConnection();
        modelRiwayat = new DefaultTableModel(new String[]{"ID Transaksi","Nama Food", "Nama Drink", "Nama Snack",
        "Nama Pegawai", "Nama Cust", "Tanggal", "Total"},0);
        
        modelKasir = new DefaultTableModel(new String[]{"ID Pegawai","Nama", "Username", "Password", "No HP", "Alamat"},0);
        
        loadDataRiwayat();
        loadDataKasir();
        loadDataFood();
        loadDataDrink();
        loadDataSnack();

    }
    
    public void setOrderDetails(String details) {
        jTextArea1.setText(details);
    }
    
    public void setTotalPesanan(int totalPesanan) {
        jTTotal.setText(String.valueOf(totalPesanan));
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jBVer = new javax.swing.JButton();
        jBShw = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jInShow = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        jTCash1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jInVerify = new javax.swing.JInternalFrame();
        jTTotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTCash = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTK = new javax.swing.JTextField();
        jBHitung = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTKasir = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jTNama = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTIDP = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTUsn = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTAl = new javax.swing.JTextField();
        jTNo = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTPw = new javax.swing.JTextField();
        jBSv = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTRiwayat = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLFood = new javax.swing.JLabel();
        jLDrink = new javax.swing.JLabel();
        jLSnack = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jTID = new javax.swing.JTextField();
        jBSimpan = new javax.swing.JButton();
        jBEdit = new javax.swing.JButton();
        jBHapus = new javax.swing.JButton();
        jBReset = new javax.swing.JButton();
        jTNama1 = new javax.swing.JTextField();
        jTHarga = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(138, 176, 211));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(new java.awt.Color(39, 117, 191));

        jLabel2.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText(" est. 1950");

        jLabel3.setFont(new java.awt.Font("Perpetua Titling MT", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("WELCOME TO FAST FOOD VECTOR");

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/top.png"))); // NOI18N

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/chef.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(jLabel2))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                .addComponent(jLabel24)
                .addGap(159, 159, 159)
                .addComponent(jLabel25)
                .addGap(32, 32, 32))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 24, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(jLabel24)))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBackground(new java.awt.Color(138, 176, 211));

        jBVer.setBackground(new java.awt.Color(189, 220, 253));
        jBVer.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBVer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/ver.png"))); // NOI18N
        jBVer.setText("Verify ");
        jBVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVerActionPerformed(evt);
            }
        });

        jBShw.setBackground(new java.awt.Color(189, 220, 253));
        jBShw.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBShw.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/show.png"))); // NOI18N
        jBShw.setText("Show");
        jBShw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBShwActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBVer, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jBShw)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jBShw, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBVer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(282, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, java.awt.BorderLayout.LINE_START);

        jDesktopPane1.setBackground(new java.awt.Color(194, 224, 253));
        jDesktopPane1.setLayout(new java.awt.GridLayout(1, 2));

        jInShow.setVisible(false);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel17.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        jLabel17.setText("ID Transaksi :");

        jTCash1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTCash1ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        jLabel18.setText("CEK");
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel18MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jInShowLayout = new javax.swing.GroupLayout(jInShow.getContentPane());
        jInShow.getContentPane().setLayout(jInShowLayout);
        jInShowLayout.setHorizontalGroup(
            jInShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInShowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jInShowLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTCash1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)))
                .addContainerGap())
        );
        jInShowLayout.setVerticalGroup(
            jInShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInShowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTCash1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDesktopPane1.add(jInShow);

        jInVerify.setBackground(javax.swing.UIManager.getDefaults().getColor("Component.focusColor"));
        jInVerify.setVisible(false);

        jTTotal.setEditable(false);
        jTTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTTotalActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("TOTAL");

        jLabel9.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel9.setText("CASH");

        jLabel10.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel10.setText("KEMBALIAN");

        jTK.setEditable(false);

        jBHitung.setFont(new java.awt.Font("Segoe UI Historic", 1, 12)); // NOI18N
        jBHitung.setText("HITUNG");
        jBHitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBHitungActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInVerifyLayout = new javax.swing.GroupLayout(jInVerify.getContentPane());
        jInVerify.getContentPane().setLayout(jInVerifyLayout);
        jInVerifyLayout.setHorizontalGroup(
            jInVerifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInVerifyLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jInVerifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jInVerifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(jTCash)
                    .addComponent(jTK))
                .addContainerGap(192, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInVerifyLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBHitung)
                .addGap(93, 93, 93))
        );
        jInVerifyLayout.setVerticalGroup(
            jInVerifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInVerifyLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jInVerifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jInVerifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTCash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jInVerifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jBHitung, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(148, Short.MAX_VALUE))
        );

        jDesktopPane1.add(jInVerify);

        jPanel1.add(jDesktopPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Transaksi", jPanel1);

        jPanel2.setLayout(new java.awt.GridLayout(2, 0));

        jPanel5.setBackground(new java.awt.Color(138, 176, 211));

        jTKasir.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Pegawai", "Nama", "Username", "Password", "No Hp", "Alamat"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTKasir);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1113, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel5);

        jPanel6.setBackground(new java.awt.Color(154, 192, 226));

        jLabel12.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        jLabel12.setText("Nama :");

        jLabel11.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        jLabel11.setText("ID :");

        jLabel13.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        jLabel13.setText("Username :");

        jLabel14.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        jLabel14.setText("Alamat :");

        jLabel15.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        jLabel15.setText("No HP :");

        jLabel16.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        jLabel16.setText("Password :");

        jBSv.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBSv.setText("Simpan");
        jBSv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSvActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setText("Hapus");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton4.setText("Reset");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTNama, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTUsn, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTIDP, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 485, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTPw, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTNo, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jBSv)
                        .addGap(196, 196, 196)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(jTAl, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(51, 51, 51))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTPw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jTNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTAl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTIDP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jTNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTUsn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(63, 63, 63)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBSv)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel6);

        jTabbedPane1.addTab("Tambah Kasir", jPanel2);

        jPanel7.setBackground(new java.awt.Color(138, 176, 211));

        jTRiwayat.setAutoCreateRowSorter(true);
        jTRiwayat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Transaksi", "ID Food", "ID Drink", "ID Snack", "ID Pegawai", "Nama Cust", "Tanggal", "Total "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTRiwayat);

        jLabel4.setFont(new java.awt.Font("Perpetua Titling MT", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("RIwayat Order");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1105, Short.MAX_VALUE)
                .addGap(14, 14, 14))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Riwayat Pesanan", jPanel7);

        jPanel9.setLayout(new java.awt.BorderLayout());

        jPanel10.setBackground(new java.awt.Color(248, 182, 116));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/ff.png"))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Perpetua Titling MT", 1, 24)); // NOI18N
        jLabel5.setText("FAST FOOD VECTOR");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/chef.png"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 51));
        jLabel7.setText(" est. 1950");

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/top.png"))); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel5))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, Short.MAX_VALUE)
                .addComponent(jLabel23)
                .addGap(158, 158, 158)
                .addComponent(jLabel6)
                .addGap(21, 21, 21))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 51, Short.MAX_VALUE))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel23))
        );

        jPanel9.add(jPanel10, java.awt.BorderLayout.PAGE_START);

        jPanel11.setBackground(new java.awt.Color(254, 222, 191));
        jPanel11.setLayout(new java.awt.BorderLayout());

        jPanel12.setBackground(new java.awt.Color(255, 204, 153));

        jLabel19.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel19.setText("MENU :");

        jLFood.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLFood.setText("FOOD");
        jLFood.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLFoodMouseClicked(evt);
            }
        });

        jLDrink.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLDrink.setText("DRINK");
        jLDrink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLDrinkMouseClicked(evt);
            }
        });

        jLSnack.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLSnack.setText("SNACK");
        jLSnack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLSnackMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLFood)
                        .addComponent(jLabel19))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLDrink)
                            .addComponent(jLSnack))
                        .addGap(5, 5, 5)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel19)
                .addGap(24, 24, 24)
                .addComponent(jLFood)
                .addGap(18, 18, 18)
                .addComponent(jLDrink)
                .addGap(18, 18, 18)
                .addComponent(jLSnack)
                .addContainerGap(261, Short.MAX_VALUE))
        );

        jPanel11.add(jPanel12, java.awt.BorderLayout.LINE_START);

        jPanel13.setBackground(new java.awt.Color(254, 222, 191));
        jPanel13.setLayout(new java.awt.GridLayout(2, 0));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nama", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable1);

        jPanel13.add(jScrollPane4);

        jPanel14.setBackground(new java.awt.Color(254, 222, 191));

        jLabel20.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        jLabel20.setText("ID :");

        jBSimpan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBSimpan.setText("Simpan");
        jBSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSimpanActionPerformed(evt);
            }
        });

        jBEdit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBEdit.setText("Edit");
        jBEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditActionPerformed(evt);
            }
        });

        jBHapus.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBHapus.setText("Hapus");
        jBHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBHapusActionPerformed(evt);
            }
        });

        jBReset.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBReset.setText("Reset");
        jBReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBResetActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        jLabel21.setText("Nama :");

        jLabel22.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        jLabel22.setText("Harga :");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jBSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(192, 192, 192)
                .addComponent(jBEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 203, Short.MAX_VALUE)
                .addComponent(jBHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158)
                .addComponent(jBReset, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(27, 27, 27)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTNama1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTID, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTNama1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(9, 9, 9)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBReset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jPanel13.add(jPanel14);

        jPanel11.add(jPanel13, java.awt.BorderLayout.CENTER);

        jPanel9.add(jPanel11, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1125, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 639, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Order CRUD", jPanel8);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        deleteDataKasir();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         // Pastikan pengguna memilih baris dari JTable
         updateDataKasir();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jBSvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSvActionPerformed
        // TODO add your handling code here:
        saveDataKasir();
    }//GEN-LAST:event_jBSvActionPerformed

    private void jBShwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBShwActionPerformed
        // TODO add your handling code here:
        jInShow.setVisible(true);
        if (jInShow == null || jInShow.isClosed()) {
                jInVerify.setVisible(true);
            } else {
                jInShow.setVisible(true);
            }
    }//GEN-LAST:event_jBShwActionPerformed

    private void jBVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVerActionPerformed
        // TODO add your handling code here:
        jInVerify.setVisible(true);

         if (jInVerify == null || jInVerify.isClosed()) {
                jInShow.setVisible(true);
            } else {
                jInVerify.setVisible(true);
            }
    }//GEN-LAST:event_jBVerActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int reset = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin mereset data?", 
        "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if (reset == JOptionPane.YES_OPTION) {
        jTNama.setText("");
        jTUsn.setText("");
        jTPw.setText("");
        jTNo.setText("");
        jTAl.setText("");
        jTIDP.setText("");  
        } else{
            return;
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jBHitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBHitungActionPerformed
        // TODO add your handling code here:
        int Total = 0;
        Total = Integer.parseInt(jTTotal.getText());
        int uangDibayar = 0;

        try {
            uangDibayar = Integer.parseInt(jTCash.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Input Invalid", "Kesalahan Input", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int kembalian  = uangDibayar - Total;

        if (kembalian > 0) {
            jTK.setText(String.valueOf(kembalian));
        } else if (kembalian == 0){
            JOptionPane.showMessageDialog(this, "Uang Pas", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else if (kembalian < 0){
            JOptionPane.showMessageDialog(this, "Uang tidak cukup", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jBHitungActionPerformed

    private void jTTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTTotalActionPerformed

    private void jTCash1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTCash1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTCash1ActionPerformed

    private void jLabel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseClicked
        // TODO add your handling code here:
        String idTransaksiText = jTCash1.getText().trim();

        if (idTransaksiText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "ID Transaksi tidak boleh kosong.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int transactionId = Integer.parseInt(idTransaksiText);
            loadTransactionDetails(transactionId);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID Transaksi harus berupa angka.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        loadTransactionTotal();
    }//GEN-LAST:event_jLabel18MouseClicked

    private void jLFoodMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLFoodMouseClicked
        // TODO add your handling code here:
        activeMenu = "Food";
        loadDataFood();
    }//GEN-LAST:event_jLFoodMouseClicked

    private void jLDrinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLDrinkMouseClicked
        // TODO add your handling code here:
        activeMenu = "Drink";
        loadDataDrink();
    }//GEN-LAST:event_jLDrinkMouseClicked

    private void jLSnackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLSnackMouseClicked
        // TODO add your handling code here:
        activeMenu = "Snack";
        loadDataSnack();
    }//GEN-LAST:event_jLSnackMouseClicked

    private void jBSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSimpanActionPerformed
        // TODO add your handling code here:
        switch (activeMenu) {
            case "Food":
            saveDataFood();
            break;
            case "Drink":
            saveDataDrink();
            break;
            case "Snack":
            saveDataSnack();
            break;
            default:
            JOptionPane.showMessageDialog(this, "Tidak ada menu yang dipilih");
            break;
        }
    }//GEN-LAST:event_jBSimpanActionPerformed

    private void jBEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditActionPerformed
        // TODO add your handling code here:
        // Ambil ID yang dipilih dari jTable
        String idText = jTID.getText().trim();
        if (idText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "ID tidak boleh kosong", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int id = Integer.parseInt(idText); // Mengonversi ID menjadi integer
        boolean found = false;

        // Loop melalui model tabel untuk mencari ID yang dipilih
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int rowCount = model.getRowCount();

        for (int i = 0; i < rowCount; i++) {
            int tableId = (int) model.getValueAt(i, 0); // Ambil ID di kolom pertama (ID)

            if (tableId == id) {
                found = true;
                break;
            }
        }

        if (found) {
            // Jika ditemukan, lanjutkan proses pembaruan
            switch (activeMenu) {
                case "Food":
                    updateDataFood();
                    break;
                case "Drink":
                    updateDataDrink();
                    break;
                case "Snack":
                    updateDataSnack();
                    break;
                default:
                    JOptionPane.showMessageDialog(this, "Tidak ada menu yang dipilih", "Error", JOptionPane.ERROR_MESSAGE);
                    break;
            }
        } else {
            // Jika ID tidak ditemukan, tampilkan pesan error
            JOptionPane.showMessageDialog(this, "Data tidak ada di tabel", "Error", JOptionPane.ERROR_MESSAGE);
            // Clear field untuk ID, Nama, dan Harga
            jTID.setText("");
            jTNama1.setText("");
            jTHarga.setText("");
            return;
        }
    }//GEN-LAST:event_jBEditActionPerformed

    private void jBHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBHapusActionPerformed
        // TODO add your handling code here:
        boolean found = false;

        if (!found) {
            JOptionPane.showMessageDialog(this, "Data Tidak Ada Di Table", "Error", JOptionPane.ERROR_MESSAGE);
            jTID.setText("");
            return;
        }else if (found=true){
            switch (activeMenu) {
                case "Food":
                deleteDataFood();
                break;
                case "Drink":
                deleteDataDrink();
                break;
                case "Snack":
                deleteDataSnack();
                break;
                default:
                JOptionPane.showMessageDialog(this, "Tidak ada menu yang dipilih");
                break;
            }
        }
    }//GEN-LAST:event_jBHapusActionPerformed

    private void jBResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBResetActionPerformed
        // TODO add your handling code here:
        int reset = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin mereset data?",
            "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (reset == JOptionPane.YES_OPTION) {
            jTNama1.setText("");
            jTHarga.setText("");
            jTID.setText("");
        } else{
            return;
        }
    }//GEN-LAST:event_jBResetActionPerformed

    private void loadDataFood() {
        modelFood.setRowCount(0);

            try {
                String sql = "SELECT * FROM food";
                PreparedStatement ps = conn.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                   // Menambahkan baris ke dalam model tabel
                   modelFood.addRow(new Object[]{
                   rs.getInt("id_food"),
                   rs.getString("nama_food"),
                   rs.getInt("harga")
                 });
                }
                jTable1.setModel(modelFood);

            } catch (SQLException e) {
               System.out.println("Error Save Data" + e.getMessage());
             }
    }
    
    private void loadDataDrink() {
        modelDrink.setRowCount(0);

        try {
            String sql = "SELECT * FROM drink";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
               // Menambahkan baris ke dalam model tabel
               modelDrink.addRow(new Object[]{
               rs.getInt("id_drink"),
               rs.getString("nama_drink"),
               rs.getInt("harga")
             });
            }
            jTable1.setModel(modelDrink);

        } catch (SQLException e) {
           System.out.println("Error Save Data" + e.getMessage());
         }
    }
    
    private void loadDataSnack() {
        modelSnack.setRowCount(0);

        try {
            String sql = "SELECT * FROM snack";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
               modelSnack.addRow(new Object[]{
               rs.getInt("id_snack"),
               rs.getString("nama_snack"),
               rs.getInt("harga")
             });
            }
            jTable1.setModel(modelSnack);

        } catch (SQLException e) {
           System.out.println("Error Save Data" + e.getMessage());
         }
    }
    
    private void saveDataFood() {
        try{
           String sql = "INSERT INTO food (nama_food, harga) VALUES (?, ?)";
           PreparedStatement ps = conn.prepareStatement(sql);
           ps.setString(1, jTNama1.getText());
           ps.setString(2, jTHarga.getText());
           ps.executeUpdate();
           
           loadDataFood();
           JOptionPane.showMessageDialog(this, "Data Berhasil Disimpan");
           jTNama1.setText("");
           jTHarga.setText("");
           return;
      } catch (SQLException e) {
        System.out.println("Error Save Data" + e.getMessage());
      }
    }
    
    private void saveDataDrink() {
        try{
           String sql = "INSERT INTO drink (nama_drink, harga) VALUES (?, ?)";
           PreparedStatement ps = conn.prepareStatement(sql);
           ps.setString(1, jTNama1.getText());
           ps.setString(2, jTHarga.getText());
           ps.executeUpdate();
           
           loadDataDrink();
           JOptionPane.showMessageDialog(this, "Data Berhasil Disimpan");
           jTNama1.setText("");
           jTHarga.setText("");
           return;
      } catch (SQLException e) {
        System.out.println("Error Save Data" + e.getMessage());
      }
    }
    
    private void saveDataSnack() {
        try{
           String sql = "INSERT INTO snack (nama_snack, harga) VALUES (?, ?)";
           PreparedStatement ps = conn.prepareStatement(sql);
           ps.setString(1, jTNama1.getText());
           ps.setString(2, jTHarga.getText());
           ps.executeUpdate();
           
           loadDataSnack();
           JOptionPane.showMessageDialog(this, "Data Berhasil Disimpan");
           jTNama1.setText("");
           jTHarga.setText("");
           return;
      } catch (SQLException e) {
        System.out.println("Error Save Data" + e.getMessage());
      }
    }
    
    
    private void updateDataFood() {
        try {
            String sql = "UPDATE food SET nama_food = ?, harga = ? WHERE id_food = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, jTNama1.getText());
            ps.setInt(2, Integer.parseInt(jTHarga.getText()));
            ps.setInt(3, Integer.parseInt(jTID.getText()));
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data Berhasil Diupdate");
            loadDataFood();

            jTID.setText("");
            jTNama1.setText("");
            jTHarga.setText("");
            return;
        }  catch (SQLException e) {
            System.out.println("Error Update Data" + e.getMessage());
        }
   }
    
    private void updateDataDrink() {
        try {
            String sql = "UPDATE drink SET nama_drink = ?, harga = ? WHERE id_drink = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, jTNama1.getText());
            ps.setInt(2, Integer.parseInt(jTHarga.getText()));
            ps.setInt(3, Integer.parseInt(jTID.getText()));
            ps.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Data Berhasil Diupdate");
            loadDataDrink();

            jTID.setText("");
            jTNama1.setText("");
            jTHarga.setText("");
            return;
        }  catch (SQLException e) {
            System.out.println("Error Update Data" + e.getMessage());
        }
   }
    
    private void updateDataSnack() {
        try {
            String sql = "UPDATE snack SET nama_snack = ?, harga = ? WHERE id_snack = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, jTNama1.getText());
            ps.setInt(2, Integer.parseInt(jTHarga.getText()));
            ps.setInt(3, Integer.parseInt(jTID.getText()));
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data Berhasil Diupdate");
            loadDataSnack();

            jTID.setText("");
            jTNama1.setText("");
            jTHarga.setText("");
            return;
        }  catch (SQLException e) {
            System.out.println("Error Update Data" + e.getMessage());
        }
   }
    
    private void deleteDataFood() {
        try  {
             String sql = "DELETE FROM food WHERE id = ?";
             PreparedStatement ps = conn.prepareStatement(sql);
             ps.setInt(1, Integer.parseInt(jTID.getText()));
             ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus");
                loadDataFood();
                jTID.setText("");
                return;         
        } catch (SQLException e) {
             System.out.println("Error Delete Data" + e.getMessage());
         }
   }
    
    private void deleteDataDrink() {
        try  {
             String sql = "DELETE FROM drink WHERE id = ?";
             PreparedStatement ps = conn.prepareStatement(sql);
             ps.setInt(1, Integer.parseInt(jTID.getText()));
             ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus");
                loadDataDrink();
                jTID.setText("");
                return;         
        } catch (SQLException e) {
             System.out.println("Error Delete Data" + e.getMessage());
         }
   }
    
    private void deleteDataSnack() {
        try  {
             String sql = "DELETE FROM snack WHERE id = ?";
             PreparedStatement ps = conn.prepareStatement(sql);
             ps.setInt(1, Integer.parseInt(jTID.getText()));
             ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus");
                loadDataDrink();
                jTID.setText("");
                return;         
        } catch (SQLException e) {
             System.out.println("Error Delete Data" + e.getMessage());
         }
   }
    
    
    private void loadDataRiwayat() {
        modelRiwayat.setRowCount(0);

        try {
            // Query untuk JOIN tabel transaksi dengan tabel lainnya berdasarkan ID
            String sql = "SELECT t.id_transaksi, f.nama_food, d.nama_drink, s.nama_snack, p.nama_pegawai, " +
                         "t.nama_customer, t.tanggal, t.total " +
                         "FROM transaksi t " +
                         "LEFT JOIN food f ON t.id_food = f.id_food " +
                         "LEFT JOIN drink d ON t.id_drink = d.id_drink " +
                         "LEFT JOIN snack s ON t.id_snack = s.id_snack " +
                         "LEFT JOIN kasir p ON t.id_pegawai = p.id_pegawai";

            PreparedStatement ps = koneksi.getConnection().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                // Menambahkan baris ke dalam model tabel dengan nama-nama yang sudah digabungkan
                modelRiwayat.addRow(new Object[]{
                    rs.getInt("id_transaksi"),
                    rs.getString("nama_food"),
                    rs.getString("nama_drink"),
                    rs.getString("nama_snack"),
                    rs.getString("nama_pegawai"),
                    rs.getString("nama_customer"),
                    rs.getTimestamp("tanggal"),
                    rs.getInt("total")
                });
            }
            jTRiwayat.setModel(modelRiwayat);

        } catch (SQLException e) {
            System.out.println("Error Save Data: " + e.getMessage());
        }
    }

    
    private void loadDataKasir() {
    modelKasir.setRowCount(0);

        try {
        String sql = "SELECT * FROM kasir";
        PreparedStatement ps = conn.prepareStatement(sql);
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            int idPegawai = rs.getInt("id_pegawai");
            String nama = rs.getString("nama_pegawai");
            String username = rs.getString("username");
            String password = rs.getString("password");
            int noHp = rs.getInt("no_hp");
            String alamat = rs.getString("alamat");

            modelKasir.addRow(new Object[]{
                idPegawai, // Display id_pegawai in the table
                nama,
                username,
                password,
                noHp,
                alamat
            });
        }

        // Set the table model
        jTKasir.setModel(modelKasir);

    } catch (SQLException e) {
        System.out.println("Error Save Data: " + e.getMessage());
    }
}
    
    private void saveDataKasir() {
        try{
           String sql = "INSERT INTO kasir (nama_pegawai, username, password, no_hp, alamat) VALUES (?, ?, ?, ?, ?)";
           PreparedStatement ps = conn.prepareStatement(sql);
           ps.setString(1, jTNama.getText());
           ps.setString(2, jTUsn.getText());
           ps.setString(3, jTPw.getText());
           ps.setString(4, jTNo.getText());
           ps.setString(5, jTAl.getText());
           ps.executeUpdate();
           
           loadDataKasir();
           JOptionPane.showMessageDialog(this, "Data Berhasil Disimpan");
           jTNama.setText("");
           jTUsn.setText("");
           jTPw.setText("");
           jTNo.setText("");
           jTAl.setText("");
           return;
      } catch (SQLException e) {
        System.out.println("Error Save Data" + e.getMessage());
      }
    }
    
    private void updateDataKasir() {
        try {
            String checkSql = "SELECT COUNT(*) FROM kasir WHERE id_pegawai = ?";
            PreparedStatement checkPs = conn.prepareStatement(checkSql);
            checkPs.setInt(1, Integer.parseInt(jTIDP.getText()));
            ResultSet rs = checkPs.executeQuery();

            if (rs.next() && rs.getInt(1) == 0) {
            JOptionPane.showMessageDialog(this, "Data Tidak Ada Di Table", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String sql = "UPDATE kasir SET nama_pegawai = ?, username = ?, password = ?, no_hp = ?, alamat = ? WHERE id_pegawai = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, jTNama1.getText());
            ps.setString(2, jTUsn.getText());
            ps.setString(3, jTPw.getText());
            ps.setString(4, jTNo.getText());
            ps.setString(5, jTAl.getText());
            ps.setInt(6, Integer.parseInt(jTIDP.getText()));
            ps.executeUpdate();

            JOptionPane.showMessageDialog(this, "Data Berhasil Diupdate");
            loadDataKasir();

            jTIDP.setText("");
            jTNama.setText("");
            jTUsn.setText("");
            jTPw.setText("");
            jTNo.setText("");
            jTAl.setText("");
        } catch (SQLException e) {
            System.out.println("Error Update Data" + e.getMessage());
        }
    }

    private void deleteDataKasir() {
        try  {
             String sql = "DELETE FROM kasir WHERE id = ?";
             PreparedStatement ps = conn.prepareStatement(sql);
             ps.setInt(1, Integer.parseInt(jTIDP.getText()));
             ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus");
                loadDataKasir();
                jTIDP.setText("");
                return;         
        } catch (SQLException e) {
             System.out.println("Error Delete Data" + e.getMessage());
         }
   }    
    
    private void loadTransactionDetails(int transactionId) {
    StringBuilder orderDetails = new StringBuilder();

    try (Connection conn = koneksi.getConnection()) {
        // Query untuk mengambil detail transaksi berdasarkan id_transaksi
        String sql = "SELECT t.id_transaksi, t.nama_customer, p.nama_pegawai, f.nama_food, d.nama_drink, s.nama_snack, t.tanggal, t.total " +
                     "FROM transaksi t " +
                     "LEFT JOIN kasir p ON t.id_pegawai = p.id_pegawai " +
                     "LEFT JOIN food f ON t.id_food = f.id_food " +
                     "LEFT JOIN drink d ON t.id_drink = d.id_drink " +
                     "LEFT JOIN snack s ON t.id_snack = s.id_snack " +
                     "WHERE t.id_transaksi = ?";

        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, transactionId);
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            // Menyusun ringkasan transaksi
            orderDetails.append("ID Transaksi: ").append(rs.getInt("id_transaksi")).append("\n");
            orderDetails.append("Nama Customer: ").append(rs.getString("nama_customer")).append("\n");
            orderDetails.append("Nama Pegawai: ").append(rs.getString("nama_pegawai")).append("\n");

            // Cek dan tambahkan hanya jika ada item yang dipesan
            String namaFood = rs.getString("nama_food");
            String namaDrink = rs.getString("nama_drink");
            String namaSnack = rs.getString("nama_snack");

            if (namaFood != null) {
                orderDetails.append("Nama Makanan: ").append(namaFood).append("\n");
            }
            if (namaDrink != null) {
                orderDetails.append("Nama Minuman: ").append(namaDrink).append("\n");
            }
            if (namaSnack != null) {
                orderDetails.append("Nama Camilan: ").append(namaSnack).append("\n");
            }

            orderDetails.append("Tanggal: ").append(rs.getTimestamp("tanggal")).append("\n");
            orderDetails.append("Total Pesanan: ").append(rs.getInt("total")).append("\n");
        } else {
            orderDetails.append("Transaksi dengan ID ").append(transactionId).append(" tidak ditemukan.");
        }

        // Tampilkan hasilnya di jTextArea
        jTextArea1.setText(orderDetails.toString());

    } catch (SQLException e) {
        System.out.println("Error saat mengambil data transaksi: " + e.getMessage());
        JOptionPane.showMessageDialog(this, "Error saat mengambil data transaksi: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}

    private void loadTransactionTotal() {
    String transactionIdText = jTCash1.getText().trim(); // Ambil ID Transaksi dari jTextField
    
    if (transactionIdText.isEmpty()) {
        JOptionPane.showMessageDialog(this, "ID Transaksi tidak boleh kosong. Silakan masukkan ID Transaksi.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    int transactionId;
    try {
        transactionId = Integer.parseInt(transactionIdText);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "ID Transaksi harus berupa angka. Silakan masukkan ID Transaksi yang valid.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try (Connection conn = koneksi.getConnection()) {
        // Query untuk mengambil total harga dari transaksi berdasarkan id_transaksi
        String sql = "SELECT total FROM transaksi WHERE id_transaksi = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, transactionId);
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            // Ambil total harga dari hasil query dan tampilkan di jTTotal
            int totalPesanan = rs.getInt("total");
            jTTotal.setText(String.valueOf(totalPesanan));
        } else {
            JOptionPane.showMessageDialog(this, "Transaksi dengan ID " + transactionId + " tidak ditemukan.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    } catch (SQLException e) {
        System.out.println("Error saat mengambil total transaksi: " + e.getMessage());
        JOptionPane.showMessageDialog(this, "Error saat mengambil total transaksi: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new kasir().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBEdit;
    private javax.swing.JButton jBHapus;
    private javax.swing.JButton jBHitung;
    private javax.swing.JButton jBReset;
    private javax.swing.JButton jBShw;
    private javax.swing.JButton jBSimpan;
    private javax.swing.JButton jBSv;
    private javax.swing.JButton jBVer;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JInternalFrame jInShow;
    private javax.swing.JInternalFrame jInVerify;
    private javax.swing.JLabel jLDrink;
    private javax.swing.JLabel jLFood;
    private javax.swing.JLabel jLSnack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTAl;
    private javax.swing.JTextField jTCash;
    private javax.swing.JTextField jTCash1;
    private javax.swing.JTextField jTHarga;
    private javax.swing.JTextField jTID;
    private javax.swing.JTextField jTIDP;
    private javax.swing.JTextField jTK;
    private javax.swing.JTable jTKasir;
    private javax.swing.JTextField jTNama;
    private javax.swing.JTextField jTNama1;
    private javax.swing.JTextField jTNo;
    private javax.swing.JTextField jTPw;
    private javax.swing.JTable jTRiwayat;
    private javax.swing.JTextField jTTotal;
    private javax.swing.JTextField jTUsn;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
